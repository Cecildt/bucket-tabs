---

---

<ul id="buckets-list" class="z-0"></ul>
<ul id="buckets-list-archive" class="z-0"></ul>

<script>
  import { BucketEvents } from '../scripts/internal/bucket-signals';
  import { GlobalBucketTabsState } from '../scripts/internal/global-state';
  import { TabEvents } from '../scripts/internal/tab-signals';

  window.globalBucketTabsState = new GlobalBucketTabsState();
  // await window.globalBucketTabsState.BucketListDataModel.initDataSet();
  await window.globalBucketTabsState.BucketListDataModel.initDemoDataSet();

  if (
    window.globalBucketTabsState.BucketListDataModel.getBuckets().length === 0
  ) {
    console.log('No buckets found!');
  }

  const bucket_list = document.getElementById('buckets-list');
  if (bucket_list) {
    setupEventListeners(bucket_list);
    window.globalBucketTabsState.BucketSignals.emit(BucketEvents.LoadBuckets);
  }

  const bucket_list_archive = document.getElementById('buckets-list-archive');
  if (bucket_list_archive) {
    setupEventListeners(bucket_list_archive);
    window.globalBucketTabsState.BucketSignals.emit(BucketEvents.LoadArchive);
  }

  function setupEventListeners(bucket_list: HTMLElement): void {
    bucket_list.addEventListener('click', async (event) => {
      const targetElement = event.target as HTMLElement;

      if (targetElement.classList.contains('bt-action-menu-item')) {
        targetElement.parentElement?.parentElement?.parentElement?.removeAttribute(
          'open'
        );
      }

      // bt-action-lock-bucket
      if (targetElement.classList.contains('bt-action-lock-bucket')) {
        const bucketGroup = targetElement.closest('.bt-bucket-group');

        if (bucketGroup) {
          const bucketId = bucketGroup.id;
          window.globalBucketTabsState.setCurrentBucketID(bucketId);
          window.globalBucketTabsState.BucketSignals.emit(
            BucketEvents.LockBucket,
            bucketId
          );
        }
      }

      // bt-action-star-bucket
      if (targetElement.classList.contains('bt-action-star-bucket')) {
        const bucketGroup = targetElement.closest('.bt-bucket-group');

        if (bucketGroup) {
          const bucketId = bucketGroup.id;
          window.globalBucketTabsState.setCurrentBucketID(bucketId);
          window.globalBucketTabsState.BucketSignals.emit(
            BucketEvents.StarBucket,
            bucketId
          );
        }
      }

      // bt-action-rename-bucket
      if (targetElement.classList.contains('bt-action-rename-bucket')) {
        const bucketGroup = targetElement.closest('.bt-bucket-group');
        let bucketName = '';

        if (bucketGroup) {
          const bucketId = bucketGroup?.id;
          window.globalBucketTabsState.setCurrentBucketID(bucketId);
          const bucketNameElement =
            bucketGroup.querySelector('.bt-bucket-name');
          if (bucketNameElement) {
            bucketName = bucketNameElement.textContent ?? '';
          }
        }

        if (bucketName === undefined) {
          bucketName = 'Bucket';
        }

        const renameBucketDialog = document.getElementById('bt-rename-bucket');
        const renameInput = renameBucketDialog?.querySelector('input');
        if (renameInput) {
          renameInput.value = bucketName;
          window.globalBucketTabsState.setCurrentBucketName(bucketName);
          renameBucketDialog?.showModal(); // DaisyUI modal method
        }
      }

      // bt-action-archive-bucket
      if (targetElement.classList.contains('bt-action-archive-bucket')) {
        const bucketGroup = targetElement.closest('.bt-bucket-group');

        if (bucketGroup) {
          const bucketId = bucketGroup.id;
          window.globalBucketTabsState.setCurrentBucketID(bucketId);
          window.globalBucketTabsState.BucketSignals.emit(
            BucketEvents.ArchiveBucket,
            bucketId
          );
        }
      }

      // bt-action-delete-bucket
      if (targetElement.classList.contains('bt-action-delete-bucket')) {
        const bucketGroup = targetElement.closest('.bt-bucket-group');

        if (bucketGroup) {
          const bucketId = bucketGroup.id;
          window.globalBucketTabsState.setCurrentBucketID(bucketId);
          window.globalBucketTabsState.BucketSignals.emit(
            BucketEvents.DeleteBucket,
            bucketId
          );
        }
      }

      // bt-action-restore-all-tabs
      if (targetElement.classList.contains('bt-action-restore-all-tabs')) {
        const bucketGroup = targetElement.closest('.bt-bucket-group');

        if (bucketGroup) {
          const bucketId = bucketGroup.id;
          window.globalBucketTabsState.setCurrentBucketID(bucketId);
          window.globalBucketTabsState.TabSignals.emit(
            TabEvents.RestoreTabs,
            bucketId
          );
        }
      }

      // bt-action-delete-all-tabs
      if (targetElement.classList.contains('bt-action-delete-all-tabs')) {
        const bucketGroup = targetElement.closest('.bt-bucket-group');

        if (bucketGroup) {
          const bucketId = bucketGroup.id;
          window.globalBucketTabsState.setCurrentBucketID(bucketId);
          window.globalBucketTabsState.TabSignals.emit(
            TabEvents.DeleteTabs,
            bucketId
          );
        }
      }

      // bt-action-archive-all-tabs
      if (targetElement.classList.contains('bt-action-archive-all-tabs')) {
        const bucketGroup = targetElement.closest('.bt-bucket-group');

        if (bucketGroup) {
          const bucketId = bucketGroup.id;
          window.globalBucketTabsState.setCurrentBucketID(bucketId);
          window.globalBucketTabsState.TabSignals.emit(
            TabEvents.ArchiveTabs,
            bucketId
          );
        }
      }

      // menu-dropdown-toggle
      if (targetElement.classList.contains('menu-dropdown-toggle')) {
        targetElement.parentElement
          ?.querySelector('ul.menu-dropdown')
          ?.classList.toggle('menu-dropdown-show');
      }

      if (targetElement.classList.contains('bt-tab-item-menu')) {
        let children = targetElement.querySelector('span.badge-neutral');
        if (children) {
          children.classList.remove('badge-neutral');
          children.classList.add('badge-primary');
        } else {
          children = targetElement.querySelector('span.badge-primary');
          if (children) {
            children.classList.remove('badge-primary');
            children.classList.add('badge-neutral');
          }
        }
      }

      // bt-tab-item-menu-action-archive
      if (targetElement.classList.contains('bt-tab-item-menu-action-archive')) {
        console.log('Archive tab');
      }


      // bt-tab-item-menu-action-delete
      if (targetElement.classList.contains('bt-tab-item-menu-action-delete')) {
        console.log('Delete Tab');
      }


      // bt-tab-item-menu-action-window
      if (targetElement.classList.contains('bt-tab-item-menu-action-window')) {
        console.log('New window tab');
      }


    });
  }
</script>
